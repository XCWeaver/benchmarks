// Code generated by "weaver generate". DO NOT EDIT.
//go:build !ignoreWeaverGen

package model

import (
	"eu_deployment/pkg/trace"
	"fmt"
	"github.com/ServiceWeaver/weaver"
	"github.com/ServiceWeaver/weaver/runtime/codegen"
)

// weaver.InstanceOf checks.

// weaver.Router checks.

// Local stub implementations.

// Client stub implementations.

// Note that "weaver generate" will always generate the error message below.
// Everything is okay. The error message is only relevant if you see it when
// you run "go build" or "go run".
var _ codegen.LatestVersion = codegen.Version[[0][20]struct{}](`

ERROR: You generated this file with 'weaver generate' v0.22.1-0.20231019162801-c2294d1ae0e8 (codegen
version v0.20.0). The generated code is incompatible with the version of the
github.com/ServiceWeaver/weaver module that you're using. The weaver module
version can be found in your go.mod file or by running the following command.

    go list -m github.com/ServiceWeaver/weaver

We recommend updating the weaver module and the 'weaver generate' command by
running the following.

    go get github.com/ServiceWeaver/weaver@latest
    go install github.com/ServiceWeaver/weaver/cmd/weaver@latest

Then, re-run 'weaver generate' and re-build your code. If the problem persists,
please file an issue at https://github.com/ServiceWeaver/weaver/issues.

`)

// Server stub implementations.

// Reflect stub implementations.

// AutoMarshal implementations.

var _ codegen.AutoMarshal = (*Creator)(nil)

type __is_Creator[T ~struct {
	weaver.AutoMarshal
	UserID   string "bson:\"user_id\""
	Username string "bson:\"username\""
}] struct{}

var _ __is_Creator[Creator]

func (x *Creator) WeaverMarshal(enc *codegen.Encoder) {
	if x == nil {
		panic(fmt.Errorf("Creator.WeaverMarshal: nil receiver"))
	}
	enc.String(x.UserID)
	enc.String(x.Username)
}

func (x *Creator) WeaverUnmarshal(dec *codegen.Decoder) {
	if x == nil {
		panic(fmt.Errorf("Creator.WeaverUnmarshal: nil receiver"))
	}
	x.UserID = dec.String()
	x.Username = dec.String()
}

var _ codegen.AutoMarshal = (*Media)(nil)

type __is_Media[T ~struct {
	weaver.AutoMarshal
	MediaID   int64  "bson:\"media_id\""
	MediaType string "bson:\"media_type\""
}] struct{}

var _ __is_Media[Media]

func (x *Media) WeaverMarshal(enc *codegen.Encoder) {
	if x == nil {
		panic(fmt.Errorf("Media.WeaverMarshal: nil receiver"))
	}
	enc.Int64(x.MediaID)
	enc.String(x.MediaType)
}

func (x *Media) WeaverUnmarshal(dec *codegen.Decoder) {
	if x == nil {
		panic(fmt.Errorf("Media.WeaverUnmarshal: nil receiver"))
	}
	x.MediaID = dec.Int64()
	x.MediaType = dec.String()
}

var _ codegen.AutoMarshal = (*Message)(nil)

type __is_Message[T ~struct {
	weaver.AutoMarshal
	ReqID              int64             "json:\"req_id\""
	UserID             string            "json:\"user_id\""
	PostID             string            "json:\"post_id\""
	Timestamp          int64             "json:\"timestamp\""
	UserMentionIDs     []string          "json:\"user_mention_ids\""
	SpanContext        trace.SpanContext "json:\"span_context\""
	NotificationSendTs int64             "json:\"notification_write\""
}] struct{}

var _ __is_Message[Message]

func (x *Message) WeaverMarshal(enc *codegen.Encoder) {
	if x == nil {
		panic(fmt.Errorf("Message.WeaverMarshal: nil receiver"))
	}
	enc.Int64(x.ReqID)
	enc.String(x.UserID)
	enc.String(x.PostID)
	enc.Int64(x.Timestamp)
	serviceweaver_enc_slice_string_4af10117(enc, x.UserMentionIDs)
	(x.SpanContext).WeaverMarshal(enc)
	enc.Int64(x.NotificationSendTs)
}

func (x *Message) WeaverUnmarshal(dec *codegen.Decoder) {
	if x == nil {
		panic(fmt.Errorf("Message.WeaverUnmarshal: nil receiver"))
	}
	x.ReqID = dec.Int64()
	x.UserID = dec.String()
	x.PostID = dec.String()
	x.Timestamp = dec.Int64()
	x.UserMentionIDs = serviceweaver_dec_slice_string_4af10117(dec)
	(&x.SpanContext).WeaverUnmarshal(dec)
	x.NotificationSendTs = dec.Int64()
}

func serviceweaver_enc_slice_string_4af10117(enc *codegen.Encoder, arg []string) {
	if arg == nil {
		enc.Len(-1)
		return
	}
	enc.Len(len(arg))
	for i := 0; i < len(arg); i++ {
		enc.String(arg[i])
	}
}

func serviceweaver_dec_slice_string_4af10117(dec *codegen.Decoder) []string {
	n := dec.Len()
	if n == -1 {
		return nil
	}
	res := make([]string, n)
	for i := 0; i < n; i++ {
		res[i] = dec.String()
	}
	return res
}

var _ codegen.AutoMarshal = (*Post)(nil)

type __is_Post[T ~struct {
	weaver.AutoMarshal
	PostID       string        "bson:\"post_id\""
	ReqID        int64         "bson:\"req_id\""
	Creator      Creator       "bson:\"creator\""
	Text         string        "bson:\"text\""
	UserMentions []UserMention "bson:\"user_mentions\""
	Media        []Media       "bson:\"media\""
	URLs         []URL         "bson:\"urls\""
	Timestamp    int64         "bson:\"timestamp\""
	PostType     PostType      "bson:\"posttype\""
}] struct{}

var _ __is_Post[Post]

func (x *Post) WeaverMarshal(enc *codegen.Encoder) {
	if x == nil {
		panic(fmt.Errorf("Post.WeaverMarshal: nil receiver"))
	}
	enc.String(x.PostID)
	enc.Int64(x.ReqID)
	(x.Creator).WeaverMarshal(enc)
	enc.String(x.Text)
	serviceweaver_enc_slice_UserMention_2dd696ff(enc, x.UserMentions)
	serviceweaver_enc_slice_Media_2b5ca60e(enc, x.Media)
	serviceweaver_enc_slice_URL_eb8a95e1(enc, x.URLs)
	enc.Int64(x.Timestamp)
	enc.Int((int)(x.PostType))
}

func (x *Post) WeaverUnmarshal(dec *codegen.Decoder) {
	if x == nil {
		panic(fmt.Errorf("Post.WeaverUnmarshal: nil receiver"))
	}
	x.PostID = dec.String()
	x.ReqID = dec.Int64()
	(&x.Creator).WeaverUnmarshal(dec)
	x.Text = dec.String()
	x.UserMentions = serviceweaver_dec_slice_UserMention_2dd696ff(dec)
	x.Media = serviceweaver_dec_slice_Media_2b5ca60e(dec)
	x.URLs = serviceweaver_dec_slice_URL_eb8a95e1(dec)
	x.Timestamp = dec.Int64()
	*(*int)(&x.PostType) = dec.Int()
}

func serviceweaver_enc_slice_UserMention_2dd696ff(enc *codegen.Encoder, arg []UserMention) {
	if arg == nil {
		enc.Len(-1)
		return
	}
	enc.Len(len(arg))
	for i := 0; i < len(arg); i++ {
		(arg[i]).WeaverMarshal(enc)
	}
}

func serviceweaver_dec_slice_UserMention_2dd696ff(dec *codegen.Decoder) []UserMention {
	n := dec.Len()
	if n == -1 {
		return nil
	}
	res := make([]UserMention, n)
	for i := 0; i < n; i++ {
		(&res[i]).WeaverUnmarshal(dec)
	}
	return res
}

func serviceweaver_enc_slice_Media_2b5ca60e(enc *codegen.Encoder, arg []Media) {
	if arg == nil {
		enc.Len(-1)
		return
	}
	enc.Len(len(arg))
	for i := 0; i < len(arg); i++ {
		(arg[i]).WeaverMarshal(enc)
	}
}

func serviceweaver_dec_slice_Media_2b5ca60e(dec *codegen.Decoder) []Media {
	n := dec.Len()
	if n == -1 {
		return nil
	}
	res := make([]Media, n)
	for i := 0; i < n; i++ {
		(&res[i]).WeaverUnmarshal(dec)
	}
	return res
}

func serviceweaver_enc_slice_URL_eb8a95e1(enc *codegen.Encoder, arg []URL) {
	if arg == nil {
		enc.Len(-1)
		return
	}
	enc.Len(len(arg))
	for i := 0; i < len(arg); i++ {
		(arg[i]).WeaverMarshal(enc)
	}
}

func serviceweaver_dec_slice_URL_eb8a95e1(dec *codegen.Decoder) []URL {
	n := dec.Len()
	if n == -1 {
		return nil
	}
	res := make([]URL, n)
	for i := 0; i < n; i++ {
		(&res[i]).WeaverUnmarshal(dec)
	}
	return res
}

var _ codegen.AutoMarshal = (*URL)(nil)

type __is_URL[T ~struct {
	weaver.AutoMarshal
	ExpandedUrl  string "bson:\"expanded_url\""
	ShortenedUrl string "bson:\"shortened_url\""
}] struct{}

var _ __is_URL[URL]

func (x *URL) WeaverMarshal(enc *codegen.Encoder) {
	if x == nil {
		panic(fmt.Errorf("URL.WeaverMarshal: nil receiver"))
	}
	enc.String(x.ExpandedUrl)
	enc.String(x.ShortenedUrl)
}

func (x *URL) WeaverUnmarshal(dec *codegen.Decoder) {
	if x == nil {
		panic(fmt.Errorf("URL.WeaverUnmarshal: nil receiver"))
	}
	x.ExpandedUrl = dec.String()
	x.ShortenedUrl = dec.String()
}

var _ codegen.AutoMarshal = (*User)(nil)

type __is_User[T ~struct {
	weaver.AutoMarshal
	UserID    string "bson:\"user_id\""
	FirstName string "bson:\"first_name\""
	LastName  string "bson:\"last_name\""
	Username  string "bson:\"username\""
	PwdHashed string "bson:\"pwd_hashed\""
	Salt      string "bson:\"salt\""
}] struct{}

var _ __is_User[User]

func (x *User) WeaverMarshal(enc *codegen.Encoder) {
	if x == nil {
		panic(fmt.Errorf("User.WeaverMarshal: nil receiver"))
	}
	enc.String(x.UserID)
	enc.String(x.FirstName)
	enc.String(x.LastName)
	enc.String(x.Username)
	enc.String(x.PwdHashed)
	enc.String(x.Salt)
}

func (x *User) WeaverUnmarshal(dec *codegen.Decoder) {
	if x == nil {
		panic(fmt.Errorf("User.WeaverUnmarshal: nil receiver"))
	}
	x.UserID = dec.String()
	x.FirstName = dec.String()
	x.LastName = dec.String()
	x.Username = dec.String()
	x.PwdHashed = dec.String()
	x.Salt = dec.String()
}

var _ codegen.AutoMarshal = (*UserMention)(nil)

type __is_UserMention[T ~struct {
	weaver.AutoMarshal
	UserID   string "bson:\"user_id\""
	Username string "bson:\"username\""
}] struct{}

var _ __is_UserMention[UserMention]

func (x *UserMention) WeaverMarshal(enc *codegen.Encoder) {
	if x == nil {
		panic(fmt.Errorf("UserMention.WeaverMarshal: nil receiver"))
	}
	enc.String(x.UserID)
	enc.String(x.Username)
}

func (x *UserMention) WeaverUnmarshal(dec *codegen.Decoder) {
	if x == nil {
		panic(fmt.Errorf("UserMention.WeaverUnmarshal: nil receiver"))
	}
	x.UserID = dec.String()
	x.Username = dec.String()
}
